/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Alumno;
import Clases.Asignacion;
import Clases.Curso;
import java.awt.HeadlessException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author chris
 */
public class AsignarAlumno extends javax.swing.JDialog {

    private Alumno alumnoActual;

    /**
     * Creates new form AsignarAlumno
     */
    public AsignarAlumno(java.awt.Frame parent, boolean modal, Alumno alumno) {
        super(parent, modal);
        initComponents();
        alumnoActual = alumno;
        lblNombreAlumno.setText(alumno.getNombres() + " " + alumno.getApellidos());
        txtCodigo.setEnabled(false);
        validarAccion();
        tabla();
        llenarComboCurso();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExportar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblNombreAlumno = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtBuscarCodigo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtHoraInicio = new javax.swing.JTextField();
        cmbCurso = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtHoraFinal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtCodigo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnExportar1 = new javax.swing.JButton();

        btnExportar.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/reports2.png"))); // NOI18N
        btnExportar.setText("EXPORTAR");
        btnExportar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Alumno:");

        lblNombreAlumno.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblNombreAlumno.setText("Alumno:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 102))); // NOI18N

        jLabel9.setText("Código:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search32.png"))); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtBuscarCodigo))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jLabel2.setText("Hora inicio (HH:mm):");

        txtHoraInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraInicioActionPerformed(evt);
            }
        });

        cmbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Hora final (HH:mm):");

        txtHoraFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraFinalActionPerformed(evt);
            }
        });

        jLabel6.setText("Curso:");

        btnGuardar.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardar32.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete32.png"))); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update32.png"))); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        jLabel10.setText("Código:");

        btnExportar1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnExportar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/reports2.png"))); // NOI18N
        btnExportar1.setText("EXPORTAR");
        btnExportar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(170, 170, 170)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(lblNombreAlumno))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel4))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtHoraInicio)
                                            .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtHoraFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(704, 704, 704)
                        .addComponent(btnExportar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblNombreAlumno))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoraInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHoraFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btnExportar1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtBuscarCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese código", "Failure", JOptionPane.ERROR_MESSAGE);
        } else {
            enabled(false);
            Asignacion asignacion = Cruds.CrudAsignacion.buscarAsignacion(Long.valueOf(txtBuscarCodigo.getText()));
            if (asignacion == null) {
                JOptionPane.showMessageDialog(null, "Alumno no encontrado", "Failure", JOptionPane.ERROR_MESSAGE);
                txtBuscarCodigo.setText("");
            } else {
                txtCodigo.setText(String.valueOf(asignacion.getId()));
                txtHoraInicio.setText(asignacion.getHoraInicio().toString());
                txtHoraFinal.setText(asignacion.getHoraFinal().toString());
                cmbCurso.getModel().setSelectedItem(asignacion.getCurso());

            }
            enabled(true);
            validarAccion();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtHoraInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraInicioActionPerformed

    private void txtHoraFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraFinalActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (validarDatosRequeridos()) {
            enabled(false);
            try {
                Time horaInicial = formatoHora(txtHoraInicio.getText());
                Time horaFinal = formatoHora(txtHoraFinal.getText());

                Asignacion asignacion = Cruds.CrudAsignacion.buscarAsignacionPorHorario(alumnoActual.getId(),
                        horaInicial, horaFinal, null, false);
                if (asignacion != null) {
                    JOptionPane.showMessageDialog(null, "El alumno ya tiene asignado un curso en el horario ingresado", "Failure", JOptionPane.ERROR_MESSAGE);
                } else {
                    Asignacion asignacionGuardar = construirObjetoAsignacion(true, horaInicial, horaFinal);
                    if (Cruds.CrudAsignacion.insertar(asignacionGuardar)) {
                        JOptionPane.showMessageDialog(null, "Datos agregados exitosamente");
                        limpiar();
                        tabla();
                        llenarComboCurso();
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrió un error al asignar al alumno", "Failure", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (HeadlessException e) {
                System.out.println("ex: " + e.getMessage());
            } catch (Exception ex) {
                Logger.getLogger(AsignarAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
            enabled(true);
            validarAccion();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        enabled(false);
        if (Cruds.CrudAsignacion.eliminar(Long.valueOf(txtCodigo.getText()))) {
            JOptionPane.showMessageDialog(null, "Asignación eliminada exitosamente");
            limpiar();
            tabla();
            llenarComboCurso();
        } else {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al eliminar la asignación", "Failure", JOptionPane.ERROR_MESSAGE);
        }
        enabled(true);
        validarAccion();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (validarDatosRequeridos()) {
            enabled(false);
            try {
                Time horaInicial = formatoHora(txtHoraInicio.getText());
                Time horaFinal = formatoHora(txtHoraFinal.getText());

                Asignacion asignacion = Cruds.CrudAsignacion.buscarAsignacionPorHorario(alumnoActual.getId(),
                        horaInicial, horaFinal, Long.valueOf(txtCodigo.getText()), true);
                if (asignacion != null) {
                    JOptionPane.showMessageDialog(null, "El alumno ya tiene asignado un curso en el horario ingresado", "Failure", JOptionPane.ERROR_MESSAGE);
                } else {
                    Asignacion asignacionActualizar = construirObjetoAsignacion(false, horaInicial, horaFinal);
                    if (Cruds.CrudAsignacion.actualizar(asignacionActualizar)) {
                        JOptionPane.showMessageDialog(null, "Datos actualizados exitosamente");
                        limpiar();
                        tabla();
                        llenarComboCurso();
                    } else {
                        JOptionPane.showMessageDialog(null, "Ocurrió un error al actualizar la asignación", "Failure", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (HeadlessException | NumberFormatException e) {
            } catch (Exception ex) {
                Logger.getLogger(AsignarAlumno.class.getName()).log(Level.SEVERE, null, ex);
            }
            enabled(true);
            validarAccion();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        try {
            exportarExcel();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    private void btnExportar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportar1ActionPerformed
        try {
            exportarExcel();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExportar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AsignarAlumno dialog = new AsignarAlumno(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void tabla() {
        try {
            DefaultTableModel tableModel = new DefaultTableModel() {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            String[] columnas = {"Codigo", "Curso", "Hora inicio", "Hora final", "Profesor"};
            tableModel.setColumnIdentifiers(columnas);
            jTable1.setModel(tableModel);
            Object[] fila = new Object[tableModel.getColumnCount()];
            List<Asignacion> asignaciones = Cruds.CrudAsignacion.obtenerCursosAsignadosAlumno(alumnoActual.getId());

            for (Asignacion asignacion : asignaciones) {
                fila[0] = asignacion.getId();
                fila[1] = asignacion.getCurso().getNombreCurso();
                fila[2] = asignacion.getHoraInicio();
                fila[3] = asignacion.getHoraFinal();
                fila[4] = asignacion.getCurso().getProfesor().getNombres() + " " + asignacion.getCurso().getProfesor().getApellidos();

                tableModel.addRow(fila);
            }

        } catch (NullPointerException e) {
        }
    }

    private void llenarComboCurso() {
        DefaultComboBoxModel cbbModel = new DefaultComboBoxModel();
        cmbCurso.setModel(cbbModel);

        List<Curso> cursos = Cruds.CrudCurso.cursosNoAsignadosPorAlumno(alumnoActual.getId());
        cbbModel.addElement("");
        for (Curso curso : cursos) {
            cbbModel.addElement(curso);
        }
    }

    public void limpiar() {
        txtBuscarCodigo.setText("");
        txtCodigo.setText("");
        txtHoraInicio.setText("");
        txtHoraFinal.setText("");
        cmbCurso.getModel().setSelectedItem("");
    }

    private void validarAccion() {
        if ("".equals(txtCodigo.getText())) {
            btnGuardar.setEnabled(true);
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
        } else {
            btnGuardar.setEnabled(false);
            btnActualizar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }
              if (jTable1.getModel().getRowCount() > 0) {
            btnExportar.setEnabled(true);
        } else {
            btnExportar.setEnabled(false);
        }
    }

    public void enabled(Boolean enabled) {
        btnGuardar.setEnabled(enabled);
        btnActualizar.setEnabled(enabled);
        btnEliminar.setEnabled(enabled);
        btnBuscar.setEnabled(enabled);
    }

    private Boolean validarDatosRequeridos() {
        if ("".equals(txtHoraInicio.getText()) || "".equals(txtHoraFinal.getText())
                || "".equals(cmbCurso.getSelectedItem())) {
            JOptionPane.showMessageDialog(null, "Llene los campos obligatorios", "Failure", JOptionPane.ERROR_MESSAGE);
            return false;
        } else {
            return true;
        }
    }

    private Asignacion construirObjetoAsignacion(Boolean crear, Time horaInicio, Time horaFinal) {
        Asignacion asignacion = new Asignacion();
        if (!crear) {
            asignacion.setId(Long.valueOf(txtCodigo.getText()));
        }

        asignacion.setHoraInicio(horaInicio);
        asignacion.setHoraFinal(horaFinal);
        asignacion.setCurso((Curso) cmbCurso.getSelectedItem());
        asignacion.setAlumno(alumnoActual);

        return asignacion;
    }

    private Time formatoHora(String time) throws Exception {
        String[] times = time.split(":");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm:ss");
        LocalDateTime localDateTime = LocalDate.now().atTime(Integer.valueOf(times[0]), Integer.valueOf(times[1]));
        localDateTime.format(formatter);

        LocalTime localTime = localDateTime.toLocalTime();
        return Time.valueOf(localTime);
    }
    
    private void exportarExcel() throws IOException {
        Date date = new Date();
        String fileName = "Asignacion" + date.getTime();
        File file = new File("C:\\COLEGIO\\Reportes", fileName + ".xls");
        TableModel model = jTable1.getModel();
        try (BufferedWriter excel = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file, true), "UTF-8"))) {
            for (int i = 0; i < model.getColumnCount(); i++) {
                excel.write(model.getColumnName(i) + "\t");
            }

            excel.write("\n");

            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    excel.write(model.getValueAt(i, j).toString() + "\t");
                }
                excel.write("\n");
            }
        }
        
        String message = "Reporte generado en la ubación C:\\COLEGIO\\Reportes con el nombre: " + fileName;
        JOptionPane.showMessageDialog(null, message);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnExportar1;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cmbCurso;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblNombreAlumno;
    private javax.swing.JTextField txtBuscarCodigo;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtHoraFinal;
    private javax.swing.JTextField txtHoraInicio;
    // End of variables declaration//GEN-END:variables
}
